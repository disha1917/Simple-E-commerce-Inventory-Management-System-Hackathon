/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package shoppingmall12pm;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane; 
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import static shoppingmall12pm.detailPage.default_img_name;
import static shoppingmall12pm.detailPage.mypassword;
import static shoppingmall12pm.detailPage.myurl;
import static shoppingmall12pm.detailPage.myuser;
public class ManageUser extends javax.swing.JInternalFrame {

    File myfile;
    String oldname;
    public ManageUser() {
        initComponents(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField4 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Manage User");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 239, 239));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage User");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Name");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Phone");

        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("DOB");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Address");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("User Name");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Password");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("User Type");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jRadioButton1.setText("Male");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jRadioButton2.setText("Female");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jPasswordField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Usertype", "Admin", "Employee" }));

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Update");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Delete");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone", "Gender", "DOB", "Address", "Username", "Usertype"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton4.setBackground(new java.awt.Color(255, 204, 204));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setText("Fetch");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 204, 204));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jDateChooser1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton6.setBackground(new java.awt.Color(255, 204, 204));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setText("Upload");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPasswordField1)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField2))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField1))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                            .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jPasswordField1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     if(check_validation()==false)
         return; /// stop this function now
      

    ///image data
     String filename="";
     if(myfile==null)//no image selected by user
     {
        filename=default_img_name; // default image name for database
     }
     else //some image is selected
     {
        if(myfile.length()>90000000) ///check size of file(image)
        {
            JOptionPane.showMessageDialog(rootPane, "Image is too large");
            return; ///don't do anything(no saving)
        }
        else
        {
            filename = new java.util.Date().getTime() + myfile.getName();//Date.getTime() added for unique file name.
            //saving image in folder-----------
            int i;
            FileInputStream rd = null;
            FileOutputStream outs = null; 
            try 
            { 
                rd = new FileInputStream(myfile); ///user selected image
                outs = new FileOutputStream("userimages\\"+filename);//writing the new file in 'Images' folder, in the project

                byte[] b = new byte[2048];
                while ((i = rd.read(b)) !=-1) 
                {
                    outs.write(b, 0, i); //copying from pictures to empimages byte by byte 
                } 
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "error" + e.getMessage());
            }
            finally 
            {
                try 
                {
                    rd.close();
                    outs.close();
                } 
                catch (Exception e) 
                {
                    JOptionPane.showMessageDialog(rootPane, "error in closing file" + e.getMessage());
                }
            }
        } 
     }
 
     
     
    //---------------------- text ---------------------------------
    try
    {  
        Connection conn = DriverManager.getConnection(myurl , myuser, mypassword); 
        try
        {
            String qry = "insert into usertable values(?,?,?,?,?,?,?,?,?)";
            PreparedStatement pst = conn.prepareStatement(qry);
            pst.setString(1,jTextField1.getText());
            pst.setString(2,jTextField2.getText());
            if(jRadioButton1.isSelected())
            {
                pst.setString(3,"male"); 
            }
            else
            {
                pst.setString(3,"female"); 
            }
            
            SimpleDateFormat myformat = new SimpleDateFormat("yy-MM-dd");
            String d1 = myformat.format(jDateChooser1.getDate()); 
            pst.setString(4,d1);
            pst.setString(5,jTextArea1.getText());
            pst.setString(6,jTextField4.getText());
            pst.setString(7,jPasswordField1.getText());
            pst.setString(8,jComboBox1.getSelectedItem().toString()); 
            pst.setString(9, filename);

            int rowcount = pst.executeUpdate();
            if(rowcount==1)
            {
                JOptionPane.showMessageDialog(rootPane,"User Added Successfully");
                clearPage();
            }     
        }
        catch(Exception e)
        {
                JOptionPane.showMessageDialog(rootPane,"Query Error : "+e.getMessage()); 
        }   
    }
    catch(Exception e)
    {
            JOptionPane.showMessageDialog(rootPane,"Database Error : "+e.getMessage()); 
    } 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        fetchData(jTextField4.getText());
    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   if(check_validation()==false)
         return; /// stop this function now
   
   //------------- image --------------------------- 
    //update image
    String filename="";
    if(myfile==null)//no image selected by user
    {
        filename=oldname; // old image name for database
        ///nothing to save or delete in image folder
    }
    else //some image is selected
    {
        if(myfile.length()>90000000) ///check size of file(image)
        {
            JOptionPane.showMessageDialog(rootPane, "Image is too large");
            File mydfile=new File("userimages//"+oldname);
            try
            {
                Image simg = ImageIO.read( new File(mydfile.getAbsolutePath())).getScaledInstance( jLabel10.getWidth(), jLabel10.getHeight(), Image.SCALE_AREA_AVERAGING);
                jLabel10.setIcon(new ImageIcon(simg));
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot read image");
            }
            return; ///don't do anything(no saving)
        }
        else ///new image is selected with correct size 
        {
            filename = new java.util.Date().getTime() + myfile.getName();//Date.getTime() added for unique file name.
            //saving image in folder-----------
            int i;
            FileInputStream rd = null;
            FileOutputStream outs = null; 
            try 
            { 
                rd = new FileInputStream(myfile);
                outs = new FileOutputStream("userimages\\"+filename);//writing the new file in 'Images' folder, in the project
                byte[] b = new byte[2048];
                while ((i = rd.read(b)) !=-1) 
                {
                outs.write(b, 0, i); //copying from pictures to empimages byte by byte 
                } 
            }
            catch (Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "error" + e.getMessage());
            }
            finally 
            {
                try 
                {
                    rd.close();
                    outs.close();
                } 
                catch (Exception e) 
                {
                    JOptionPane.showMessageDialog(rootPane, "error in closing file" + e.getMessage());
                }
            }
        } 
        ///delete old image other than default
        if((oldname.equals(default_img_name) ) ) ///user never gave image in past
        {
            //delete nothing
        }
        else //user already given image in past
        {
            //delete old image 
            File oldimage=new File("userimages\\" + oldname);
            oldimage.delete();
        }

    }
 
 
 
   
   
   //-------------- text --------------------------
    try
    {  
        Connection conn = DriverManager.getConnection(myurl , myuser, mypassword); 
        try
        {
            String qry = "update usertable set name=?, phone=?, gender=?, dob=? , "
                    + "address=? , username=?, password=?, usertype=?,pic=? where username=?";
            PreparedStatement pst = conn.prepareStatement(qry);
            pst.setString(1,jTextField1.getText());
            pst.setString(2,jTextField2.getText());
            if(jRadioButton1.isSelected())
            {
                pst.setString(3,"male"); 
            }
            else
            {
                pst.setString(3,"female"); 
            }
            SimpleDateFormat myformat = new SimpleDateFormat("yy-MM-dd");
            String d1 = myformat.format(jDateChooser1.getDate()); 
            pst.setString(4,d1);
            pst.setString(5,jTextArea1.getText());
            pst.setString(6,jTextField4.getText());
            pst.setString(7,jPasswordField1.getText());
            pst.setString(8,jComboBox1.getSelectedItem().toString()); 
            pst.setString(9,filename);
            pst.setString(10,jTextField4.getText());

            int rowcount = pst.executeUpdate();
            if(rowcount==1)
            {
                JOptionPane.showMessageDialog(rootPane,"User Updated Successfully");
                clearPage();
            }     
        }
        catch(Exception e)
        {
                JOptionPane.showMessageDialog(rootPane,"Query Error : "+e.getMessage()); 
        }   
    }
    catch(Exception e)
    {
            JOptionPane.showMessageDialog(rootPane,"Database Error : "+e.getMessage()); 
    } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 
    int ans = JOptionPane.showConfirmDialog(rootPane, "Are you sure to delete ?");
    if(ans==JOptionPane.YES_OPTION)
    {
        
        ///delete old image other than default
        if((oldname.equals(default_img_name) ) ) ///user never gave image in past
        {
            //delete nothing
        }
        else //user already given image in past
        {
            //delete old image 
            File oldimage=new File("userimages\\" + oldname);
            oldimage.delete();
        }
        
        
        try
        {  
            Connection conn = DriverManager.getConnection(myurl , myuser, mypassword); 
            try
            {
                String qry = "delete from usertable  where username=?";
                PreparedStatement pst = conn.prepareStatement(qry);
                pst.setString(1,jTextField4.getText()); 

                int rowcount = pst.executeUpdate();
                if(rowcount==1)
                {
                    JOptionPane.showMessageDialog(rootPane,"User Deleted Successfully");
                    clearPage();
                }     
            }
            catch(Exception e)
            {
                    JOptionPane.showMessageDialog(rootPane,"Query Error : "+e.getMessage()); 
            }   
        }
        catch(Exception e)
        {
                JOptionPane.showMessageDialog(rootPane,"Database Error : "+e.getMessage()); 
        } 
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    try
    {  
        Connection conn = DriverManager.getConnection(myurl , myuser, mypassword); 
        try
        {
            String qry = "select * from usertable where name like ?";
            PreparedStatement pst = conn.prepareStatement(qry);
            pst.setString(1,jTextField1.getText()+"%"); 
                
            DefaultTableModel mymodel = (DefaultTableModel) jTable1.getModel();
            mymodel.setRowCount(0);
            
            ResultSet rst = pst.executeQuery();
            if(rst.next())
            {
                do
                {
                    ///getting data from table
                    String c1 = rst.getString("name");
                    String c2 = rst.getString("phone");
                    String c3 = rst.getString("gender");
                    String c4 = rst.getString("dob");
                    String c5 = rst.getString("address");
                    String c6 = rst.getString("username");
                    String c7 = rst.getString("password");
                    String c8 = rst.getString("usertype");
                    
                    
                    Object rowData[] = {c1,c2,c3,c4,c5,c6,c8};
                    mymodel.addRow(rowData); 
                }while(rst.next());
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane,"Username not found");
            }
        }
        catch(Exception e)
        {
                JOptionPane.showMessageDialog(rootPane,"Query Error : "+e.getMessage());

        }   
    }
    catch(Exception e)
    {
            JOptionPane.showMessageDialog(rootPane,"Database Error : "+e.getMessage()); 
    } 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      int r = jTable1.getSelectedRow();
      int c = 5;
      String un = jTable1.getValueAt(r, c).toString();
      fetchData(un);
      
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
     char c=evt.getKeyChar();
    if(!(Character.isAlphabetic(c) || (c==KeyEvent.VK_BACK_SPACE|| c==KeyEvent.VK_DELETE || c==KeyEvent.VK_SPACE )))
        evt.consume();
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
     char c=evt.getKeyChar();
    if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE|| c==KeyEvent.VK_DELETE)))
        evt.consume();
    
     
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    JFileChooser myfilechooser=new JFileChooser(); 
    myfilechooser.setFileFilter(new FileFilter() 
    {
        @Override
        public boolean accept(File f) 
        {
            if(f.isDirectory())
            return true; 
            String extension=f.getName().substring(f.getName().lastIndexOf(".")+1);
            String allowed[]={"jpg","png","gif","jpeg","bmp"};
            for(String a:allowed)
            {
                if(a.equals(extension))
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            return false; 
        } 
        @Override
        public String getDescription() 
        {
            return "All Picture Files"; 
        }
    });

    if(myfilechooser.showOpenDialog(rootPane)==JFileChooser.APPROVE_OPTION)
    {
        myfile=myfilechooser.getSelectedFile();
        try
        {
            Image simg = ImageIO.read( new File(myfile.getAbsolutePath())).
                    getScaledInstance( jLabel10.getWidth(), jLabel10.getHeight(), Image.SCALE_AREA_AVERAGING);
            jLabel10.setIcon(new ImageIcon(simg));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Cannot read image");
        }
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
     clearPage();
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

void fetchData(String un)
    {
        try
    { 
        
        Connection conn = DriverManager.getConnection(myurl , myuser, mypassword); 
        try
        {
            String qry = "select * from usertable where username=?";
            PreparedStatement pst = conn.prepareStatement(qry);
            pst.setString(1,un); 

            ResultSet rst = pst.executeQuery();
            if(rst.next())
            {
                    ///getting data from table
                    String c1 = rst.getString("name");
                    String c2 = rst.getString("phone");
                    String c3 = rst.getString("gender");
//                    String c4 = rst.getString("dob");
                    Date c4 = rst.getDate("dob");
                    String c5 = rst.getString("address");
                    String c6 = rst.getString("username");
                    String c7 = rst.getString("password");
                    String c8 = rst.getString("usertype");
                   oldname = rst.getString("pic");
                    
                    ///setting data into fields 
                    jTextField1.setText(c1);
                    jTextField2.setText(c2);
                    if(c3.equals("male")) 
                        jRadioButton1.setSelected(true); 
                    else 
                        jRadioButton2.setSelected(true);  
                    jDateChooser1.setDate(c4);
                    jTextArea1.setText(c5);
                    jTextField4.setText(c6);
                    jPasswordField1.setText(c7);
                    jComboBox1.setSelectedItem(c8); 
                    jButton2.setEnabled(true);
                    jButton1.setEnabled(true);
                     
                    try
                    {
                        Image simg = ImageIO.read( new File("userimages//"+oldname)).
                                getScaledInstance( jLabel10.getWidth(), jLabel10.getHeight(), Image.SCALE_AREA_AVERAGING);
                        jLabel10.setIcon(new ImageIcon(simg));
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(rootPane, "Cannot read image : \n"+e.getMessage());
                    }
        
        
        
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane,"Username not found");
            }
        }
        catch(Exception e)
        {
                JOptionPane.showMessageDialog(rootPane,"Query Error : "+e.getMessage());

        }   
    }
    catch(Exception e)
    {
            JOptionPane.showMessageDialog(rootPane,"Database Error : "+e.getMessage()); 
    } 
    }

void clearPage()
{
    jTextField1.setText(null);
    jTextField2.setText(null);
    buttonGroup1.clearSelection();
    jDateChooser1.setDate(null);
    jTextField4.setText(null);
    jTextArea1.setText(null);
    jPasswordField1.setText(null);
    jComboBox1.setSelectedIndex(0);
    
    jButton2.setEnabled(false);
    jButton1.setEnabled(false);
    
    
    myfile=null; 
        try
        {
            Image simg = ImageIO.read( new File("userimages//"+default_img_name)).
                    getScaledInstance( jLabel10.getWidth(), jLabel10.getHeight(), Image.SCALE_AREA_AVERAGING);
            jLabel10.setIcon(new ImageIcon(simg));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Cannot read image : \n"+e.getMessage());
        }
}

Boolean check_validation()
{
    if(jTextField1.getText().length()<1)
    {
        JOptionPane.showMessageDialog(rootPane, "Please enter proper name");
        return false;
    }
    else if(jTextField2.getText().length()<7 || jTextField2.getText().length()>15)
    { 
        JOptionPane.showMessageDialog(rootPane, "Please enter Valid phone \n [7-15] digits");
        return false;
    }
    // else if(jTextField3.getText().length()<6 || jTextField3.getText().contains("@")==false)
    // { 
    // JOptionPane.showMessageDialog(rootPane, "Please enter proper email");
    // return false;
    // }
    else if(jRadioButton1.isSelected()==false && jRadioButton2.isSelected()==false)
    {
        JOptionPane.showMessageDialog(rootPane, "Please choose gender");
        return false;
    }
    else if(jDateChooser1.getDate()==null)
    {
        JOptionPane.showMessageDialog(rootPane, "Please Select DOB");
        return false;
    }
    else if(jTextArea1.getText().length()<2)
    {
        JOptionPane.showMessageDialog(rootPane, "Please Enter Address");
        return false;
    } 
    else if(jTextField4.getText()==null)
    {
        JOptionPane.showMessageDialog(rootPane, "Please Username");
        return false;
    } 
    else if(jPasswordField1.getText()==null)
    {
        JOptionPane.showMessageDialog(rootPane, "Please Password");
        return false;
    } 
    else if(jComboBox1.getSelectedIndex()==0)
    {
        JOptionPane.showMessageDialog(rootPane, "Please choose user type");
        return false;
    }
    return true;
}  
}
